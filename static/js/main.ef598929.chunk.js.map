{"version":3,"sources":["avatar.jpg","styles.ts","List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","img","borderRadius","width","height","backgroundOrigin","backgroundSize","backgroundImage","ava","transform","selector","animation","margin","wrapper","display","theme","root","maxWidth","backgroundColor","palette","background","paper","ListItemLink","props","ListItem","button","component","SimpleList","links","classes","className","List","aria-label","map","link","arr","split","label","length","href","style","textDecoration","ListItemText","primary","toLocaleUpperCase","App","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,MAA0B,mCCG5BA,EAAYC,YAAW,CAChCC,IAAK,CACDC,aAAc,MACdC,MAAO,IACPC,OAAQ,IACRC,iBAAkB,gBAClBC,eAAgB,OAChBC,gBAAgB,QAAD,OAAUC,EAAV,OAEnB,oBAAqB,CACnB,KAAM,CACJC,UAAW,iBAEb,MAAO,CACLA,UAAW,oBAEb,OAAQ,CACNA,UAAW,kBAGfC,SAAU,CACRC,UAAW,kCACXC,OAAQ,QAEVC,QAAS,CACPC,QAAS,OAAQV,OAAQ,M,wCCnBzBL,EAAYC,aAAW,SAACe,GAAD,MAAY,CACvCC,KAAM,CACJb,MAAO,OACPc,SAAU,IACVL,OAAQ,OACRM,gBAAiBH,EAAMI,QAAQC,WAAWC,WAI9C,SAASC,EAAaC,GACpB,OAAO,cAACC,EAAA,EAAD,aAAUC,QAAM,EAACC,UAAU,KAAQH,IAGrC,IAAMI,EAA2C,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnDC,EAAU9B,IAEhB,OACE,qBAAK+B,UAAWD,EAAQb,KAAxB,SACE,cAACe,EAAA,EAAD,CAAML,UAAU,MAAMM,aAAW,uBAAjC,SACGJ,EAAMK,KAAI,SAACC,GACV,IAAMC,EAAMD,EAAKE,MAAM,KACjBC,EAAQF,EAAIA,EAAIG,OAAS,GAC/B,OAAO,cAAChB,EAAD,CAAciB,KAAML,EAAMM,MAAO,CAAEC,eAAgB,QAAnD,SACH,cAACC,EAAA,EAAD,CAAcC,QAASN,EAAMO,gC,iBCS5BC,MAnCf,WACE,IAAMhB,EAAU9B,IAOhB,OACE,sBAAK+B,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAWD,EAAQ5B,MACxB,mDACoB,uBADpB,+BAE8B,uBAF9B,sBAKA,mBACE6B,UAAU,WACVS,KAAK,aACLO,OAAO,SACPC,IAAI,sBAJN,oBAQA,qBAAKjB,UAAWD,EAAQhB,QAAxB,SACE,cAAC,IAAD,CAAmBiB,UAAWD,EAAQnB,gBAG1C,iDACA,cAAC,EAAD,CAAYkB,MA3BF,CACZ,+CACA,wDACA,kDCEWoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef598929.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.79e60570.jpg\";","import { makeStyles } from \"@material-ui/core/styles\";\nimport ava from \"./avatar.jpg\";\n\nexport const useStyles = makeStyles({\n    img: {\n        borderRadius: \"50%\",\n        width: 300,\n        height: 300,\n        backgroundOrigin: 'center center',\n        backgroundSize: '100%',\n        backgroundImage: `url(\"${ava}\")`\n    },\n    \"@keyframes fadeIn\": {\n      \"0%\": {\n        transform: \"translateY(0)\"\n      },\n      \"50%\": {\n        transform: \"translateY(1rem)\"\n      },\n      \"100%\": {\n        transform: \"translateY(0)\"\n      }\n    },\n    selector: {\n      animation: \"$fadeIn 1s infinite ease-in-out\",\n      margin: 'auto'\n    },\n    wrapper: {\n      display: 'flex', height: 60\n    }\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n    margin: 'auto',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction ListItemLink(props: any) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\nexport const SimpleList: React.FC<{ links: string[]}> = ({ links }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        {links.map((link: string) => {\n          const arr = link.split('/');\n          const label = arr[arr.length - 1];\n          return <ListItemLink href={link} style={{ textDecoration: 'none'}}>\n              <ListItemText primary={label.toLocaleUpperCase()}/>\n            </ListItemLink>\n        })}\n\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useStyles } from \"./styles\";\nimport './App.css';\nimport {SimpleList} from \"./List\";\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nfunction App() {\n  const classes = useStyles();\n\n  const repos = [\n    'https://github.com/stdAlexTikhonov/dash_game',\n    'https://github.com/stdAlexTikhonov/contour_components',\n    'https://github.com/stdAlexTikhonov/game1',\n  ]\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className={classes.img} ></div>\n        <p>\n          Alexander Tikhonov<br />\n          stdAlexTikhonov@hotmail.com <br />\n          +7-977-449-03-75\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"Resume.pdf\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Resume\n        </a>\n        <div className={classes.wrapper}>\n          <ArrowDownwardIcon className={classes.selector}/>\n        </div>\n      </header>\n      <h2>Latest Projects</h2>\n      <SimpleList links={repos} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}